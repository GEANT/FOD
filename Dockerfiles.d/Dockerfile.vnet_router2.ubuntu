
##############################################################################
##############################################################################
# instructions:

# 1. build container, e.g., by: 
#> docker build -f ./Dockerfiles.d/Dockerfile.vnet_router2.ubuntu -t vnet2.ubuntu . # run from main dir

# 2. before running container make sure openvswitch module is loaded in kernel (modprobe openvswitch) and run container with --privileged (needed for openvswitch inside container)
#> modprobe openvswitch
#> docker run -t -i --privileged vnet2.ubuntu

# 3. after being started you can additionally enter the container (find its DOCKERID by 'docker ps'), e.g., by:
#> docker exec -i -t DOCKERID /fod_vnet_router --mnexec h1 ping h2
#> docker exec -i -t DOCKERID /fod_vnet_router --mnexec h2 hping3 --udp -s 15 -k 10.0.0.3


# ADDITIONAL USE:

# 4. '/fod_vnet_router --init.sysstart' in the start CMD below accepts mininet arguments after '--init.sysstart' which it will pass on to the started mininet; so change line below accordingly (and rebuild container): e.g.,
# CMD [ "/fod_vnet_router", "--init.sysstart", "--topo=linear,10" ]
# CMD [ "/fod_vnet_router", "--init.sysstart", "--topo=tree" ]
# or alternatively just use modified command for running the container, e.g., by:
#> docker run -t -i --privileged vnet /fod_vnet_router --init.sysstart --topo=linear,10
#> docker run -t -i --privileged vnet /fod_vnet_router --init.sysstart --topo=tree,2

# 5. alternatively use container running in background only with netconf db server on startup 
# (running more permanently, e.g., in order to remember netconf db data (FoD rules) + rules info with counters in ovs/snmp state file):
#> docker run -d -t -i --privileged vnet /fod_vnet_router --init.netconfserver 
# then start vnet_router management in entered shell in container (find its DOCKERID by 'docker ps'), e.g., by:
#> docker exec -i -t DOCKERID /fod_vnet_router --init --topo=tree,2 # accepts arguments for mininet as --init.sysstart
# after exiting mininet shell, now ovs and snmpd will stay running

# ADDITIONAL INFOMATION:
# Of course one needs to have a running working FoD container in parallel
# and that one has to be configured
# to use the vnet_router container for NETCONF and SNMP stats polling:
# flowspy/settings.py OR flowspy/settings_local.py (the latter will override settings of thee former):

# ...
# 'NETCONF_DEVICE': '172.17.0.3', # only an example, so change value to whatever is the IP address of the netconf db server container
# 'NETCONF_PASS': 'netconf',
# 'NETCONF_PORT': 830,
# 'NETCONF_USER': 'netconf',
#
# 'SNMP_IP': ['172.17.0.3'], # only an example, so change value to whatever is the IP address of the netconf db server container
# 'SNMP_COMMUNITY': 'public',
# ...

##############################################################################
##############################################################################
# Dockerfile proper:

# 1. start from already built and working NETCONF container
# (built from router-container/Dockerfile , but currently fails to be rebuilt):
#FROM cejkat/fod-router
FROM ubuntu:18.04

##

# 2. install all dependencies in advance (/fod_vnet_router --init.sysstart will check again and might install anything still missing)
RUN apt-get -qqy update
RUN DEBIAN_FRONTEND="noninteractive" apt-get -qqy install mininet iptables iproute2 tcpdump tshark iputils-ping iputils-tracepath hping3 gawk sshpass lsof strace snmpd snmp vim less
  
RUN DEBIAN_FRONTEND="noninteractive" apt-get -qqy install netconfd yangcli socat openssh-server rsyslog

# 3. copy vnet_router management script + snmp feeder pass_persisttest_bgpflowspec (+ pass_persisttest only for testing/demonstration)
# 3. copy yang config
RUN mkdir -p /opt/dev
WORKDIR /opt/dev
COPY vnet_router/configuration.yang /opt/dev/

COPY vnet_router/fod_vnet_router /
COPY vnet_router/snmp/pass_persisttest_bgpflowspec /
COPY vnet_router/snmp/snmp-release/pass_persisttest /

##

# ./vnet_router/fod_vnet_router
# 4. default start command:
#CMD ["/usr/bin/supervisord", "-c", "/etc/supervisord.conf"]
#CMD [ "bash", "-c", "set -x; nohup /usr/bin/supervisord -c /etc/supervisord.conf & sleep 5 ;/fod_vnet_router --init" ]
CMD [ "/fod_vnet_router", "--init.sysstart.netconfd" ]

##############################################################################
##############################################################################

