<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAPTOP-F9QNV0AQ" failures="0" tests="9" name="Default test" time="1.949" errors="0" timestamp="2022-06-26T08:54:53 EEST">
  <testcase classname="test.java.Tests.AddRuleTest" name="@BeforeClass testSetUp" time="1.865">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="session not created: This version of ChromeDriver only supports Chrome version 91
Current browser version is 102.0.5005.115 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:25:48&amp;apos;
System info: host: &amp;apos;LAPTOP-F9QNV0AQ&amp;apos;, ip: &amp;apos;172.16.4.39&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;14.0.2&amp;apos;
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
	Ordinal0 [0x00793733+2504499]
	Ordinal0 [0x0072C401+2081793]
	Ordinal0 [0x00632628+1058344]
	Ordinal0 [0x0065071A+1181466]
	Ordinal0 [0x0064C58C+1164684]
	Ordinal0 [0x00649DC3+1154499]
	Ordinal0 [0x00679B82+1350530]
	Ordinal0 [0x006797DA+1349594]
	Ordinal0 [0x00675D4B+1334603]
	Ordinal0 [0x006522B4+1188532]
	Ordinal0 [0x00653149+1192265]
	GetHandleVerifier [0x0090FB8C+1512252]
	GetHandleVerifier [0x009BB0DF+2214031]
	GetHandleVerifier [0x00814BC3+484211]
	GetHandleVerifier [0x00813E69+480793]
	Ordinal0 [0x0073218D+2105741]
	Ordinal0 [0x007366E8+2123496]
	Ordinal0 [0x00736827+2123815]
	Ordinal0 [0x0073FB73+2161523]
	BaseThreadInitThunk [0x7711FA29+25]
	RtlGetAppContainerNamedObjectPath [0x776D7A9E+286]
	RtlGetAppContainerNamedObjectPath [0x776D7A6E+238]
">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 91
Current browser version is 102.0.5005.115 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'LAPTOP-F9QNV0AQ', ip: '172.16.4.39', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
Ordinal0 [0x00793733+2504499]
Ordinal0 [0x0072C401+2081793]
Ordinal0 [0x00632628+1058344]
Ordinal0 [0x0065071A+1181466]
Ordinal0 [0x0064C58C+1164684]
Ordinal0 [0x00649DC3+1154499]
Ordinal0 [0x00679B82+1350530]
Ordinal0 [0x006797DA+1349594]
Ordinal0 [0x00675D4B+1334603]
Ordinal0 [0x006522B4+1188532]
Ordinal0 [0x00653149+1192265]
GetHandleVerifier [0x0090FB8C+1512252]
GetHandleVerifier [0x009BB0DF+2214031]
GetHandleVerifier [0x00814BC3+484211]
GetHandleVerifier [0x00813E69+480793]
Ordinal0 [0x0073218D+2105741]
Ordinal0 [0x007366E8+2123496]
Ordinal0 [0x00736827+2123815]
Ordinal0 [0x0073FB73+2161523]
BaseThreadInitThunk [0x7711FA29+25]
RtlGetAppContainerNamedObjectPath [0x776D7A9E+286]
RtlGetAppContainerNamedObjectPath [0x776D7A6E+238]

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)
at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)
at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)
at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)
at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)
at test.java.Tests.AddRuleTest.testSetUp(AddRuleTest.java:1139)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeClass testSetUp -->
  <testcase classname="test.java.Tests.AddRuleTest" name="@AfterClass testSetDown" time="-1.656222893341E9">
    <skipped/>
  </testcase> <!-- @AfterClass testSetDown -->
  <testcase classname="test.java.Tests.AddRuleTest" name="AddName" time="0.0">
    <skipped/>
  </testcase> <!-- AddName -->
  <testcase classname="test.java.Tests.AddRuleTest" name="AddNoName" time="0.0">
    <skipped/>
  </testcase> <!-- AddNoName -->
  <testcase classname="test.java.Tests.AddRuleTest" name="AddWithOutExpires" time="0.0">
    <skipped/>
  </testcase> <!-- AddWithOutExpires -->
  <testcase classname="test.java.Tests.AddRuleTest" name="AddWrongDestPort" time="0.0">
    <skipped/>
  </testcase> <!-- AddWrongDestPort -->
  <testcase classname="test.java.Tests.AddRuleTest" name="AddWrongDestinationAddress" time="0.0">
    <skipped/>
  </testcase> <!-- AddWrongDestinationAddress -->
  <testcase classname="test.java.Tests.AddRuleTest" name="AddWrongName" time="0.0">
    <skipped/>
  </testcase> <!-- AddWrongName -->
  <testcase classname="test.java.Tests.AddRuleTest" name="AddWrongPort" time="0.0">
    <skipped/>
  </testcase> <!-- AddWrongPort -->
  <testcase classname="test.java.Tests.AddRuleTest" name="AddWrongSourceAddress" time="0.0">
    <skipped/>
  </testcase> <!-- AddWrongSourceAddress -->
  <testcase classname="test.java.Tests.AddRuleTest" name="AddWrongSrcPort" time="0.0">
    <skipped/>
  </testcase> <!-- AddWrongSrcPort -->
</testsuite> <!-- Default test -->
