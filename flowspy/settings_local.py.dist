# -*- coding: utf-8 -*-

##############################################################################
##############################################################################

import sys
print "loaded settings_local.py"
import socket
try:
    FODHOSTNAME = socket.gethostname()
except:
    FODHOSTNAME = 'localhost'

MYSETTING1 = "testsettings1"

#sys.exit

##############################################################################
##############################################################################

DEBUG = True
TEMPLATE_DEBUG = DEBUG

##

ALLOWED_HOSTS = ['*']
SITE_ID = 1

# Place a sequence of random chars here
SECRET_KEY = 'XXXXXX'

##############################################################################
##############################################################################
# Set up database

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'fod',                      # Or path to database file if using sqlite3.
        'USER': 'fod',                      # Not used with sqlite3.
        'PASSWORD':  'XXXXXXX',                  # Not used with sqlite3.
        'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
    }
}

##############################################################################
##############################################################################
# logging

LOG_FILE_LOCATION = "/var/log/fod"

##############################################################################
##############################################################################

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# In a Windows environment this must be set to your system time zone.
#TIME_ZONE = 'Europe/Athens'
TIME_ZONE = 'UTC'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
_ = lambda s: s

LANGUAGES = (
    ('el', _('Greek')),
    ('en', _('English')),
)

STATIC_ROOT = '/srv/flowspy/static'

ROOT_URLCONF = 'flowspy.urls'
WSGI_APPLICATION = 'flowspy.wsgi.application'

BRANDING = {
    'name': 'GÃ‰ANT OC',
    'url': 'https://' + FODHOSTNAME,
    'footer_iframe': 'https://' + FODHOSTNAME + '/iframe',
    'facebook': '//facebook.com/',
    'twitter': '//twitter.com/',
    'phone': '+44 1223 733033',
    'email': 'ncc@noc.geant.net',
    'logo': 'fodlogo2.png',
    'favicon': 'favicon.ico',
}

SETTINGS_EXPORT = [
    'BRANDING',
    'SW_VERSION',
    'LANGUAGES',
    'LANGUAGE_CODE',
]


##############################################################################
##############################################################################
# polling (live status etc.)

POLL_SESSION_UPDATE = 60.0

# Maximum size of stream of notification messages per each peer tag
NOTIF_STREAM_MAXSIZE = 50
# Maximum time that notifications persist on the server in seconds
NOTIF_STREAM_MAXLIFE = 1800

##############################################################################
##############################################################################
# user config

ADMINS = (
    ('AdminName', 'evangelos.spatharas@geant.org'),
)

MANAGERS = ADMINS

##############################################################################
##############################################################################
# email config

# Notifications
DISABLE_EMAIL_NOTIFICATION = False
SERVER_EMAIL = "Geant FoD Service (TEST) <test@fod.geant.net>"
EMAIL_SUBJECT_PREFIX = "[FoD] "
#DEFAULT_FROM_EMAIL = "myemail@gmail.com"

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "localhost"
EMAIL_PORT = 25


# BCC mail addresses
NOTIFY_ADMIN_MAILS = ["evangelos.spatharas@geant.org"]

MAIL_NOTIFICATION_TO_ALL_MATCHING_PEERS = True

##############################################################################
##############################################################################
# Shibboleth

SHIB_AUTH_ENTITLEMENT = ''
SHIB_ADMIN_DOMAIN = 'grnet.gr'
SHIB_LOGOUT_URL = 'https://' + FODHOSTNAME + '/Shibboleth.sso/Logout'

ACCOUNT_ACTIVATION_DAYS = 7

##############################################################################
# Shibboleth attribute map

# general info on these shibboleth attribute definitions:
# *_DISPLAY_NAME and *_ADDINFO should give edugain-global names and definitions and so match definitions in /etc/shibboleth/attribute-map.xml
# as values of the * variables (SHIB_ENTITLEMENT, SHIB_USERNAME, SHIB_MAIL, SHIB_FIRSTNAME, SHIB_LASTNAME) are in principle only host-config-local keys
#
# values of *_DISPLAY* are shown in edugain/login-related error messages for users; 
# instead, the values of * variables (e.g. SHIB_ENTITLEMENT, ...) are of no use for users and just confusing!
#
# specifically:
# *_DISPLAY_NAME should be a single string fully identifying the required attribute in an human-readable fashion
# *_DISPLAY_ADDINFO should be a string and should correspondingly contain descriptions for each array element of the value of the * variable

# e.g. for SHIB_ENTITLEMENT = "HTTP_ENTITLEMENT" => 
# 
# key in /etc/shibboleth/attribute-map.xml is "entitlement":
#    <Attribute name="urn:mace:dir:attribute-def:eduPersonEntitlement" id="entitlement"/>
#    <Attribute name="urn:oid:1.3.6.1.4.1.5923.1.1.1.7" id="entitlement"-->

SHIB_ENTITLEMENT = ['HTTP_SHIB_EP_ENTITLEMENT'] # value in settings.py.dist
#SHIB_ENTITLEMENT = ['HTTP_ENTITLEMENT']
SHIB_ENTITLEMENT_DISPLAY_NAME = "eduPersonEntitlement"
SHIB_ENTITLEMENT_DISPLAY_ADDINFO = "urn:oid:1.3.6.1.4.1.5923.1.1.1.7; the value of this attribute also has to include 'urn:mace:example.com:pki:user'"
#SHIB_ENTITLEMENT_DISPLAY_ADDINFO = "urn:oid:1.3.6.1.4.1.5923.1.1.1.7"

# (";"-separated) part of value of attribute with key SHIB_ENTITLEMENT needed in order to be considered a valid user:
# if SHIB_AUTH_ENTITLEMENT is empty no constraint on SHIB_ENTITLEMENT attribute value is enforced (can even be missing)
SHIB_AUTH_ENTITLEMENT = 'urn:mace:example.com:pki:user'
#SHIB_AUTH_ENTITLEMENT = '' # is also in settings_local.py so override it there

SHIB_USERNAME = ['HTTP_EPPN'] # in settings.py.dist # originally used for SHIB_USERNAME
SHIB_USERNAME_DISPLAY_NAME = "eduPersonPrincipalName"
SHIB_USERNAME_DISPLAY_ADDINFO = "urn:mace:dir:attribute-def:eduPersonPrincipalName or urn:oid:1.3.6.1.4.1.5923.1.1.1.6"
#SHIB_USERNAME = ['HTTP_PERSISTENT_ID']
#SHIB_USERNAME_DISPLAY_NAME = "PERSISTENT_ID"
#SHIB_USERNAME_DISPLAY_ADDINFO = "urn:oid:1.3.6.1.4.1.5923.1.1.1.10"

SHIB_SLUGIFY_USERNAME = False # value in settings.py.dist
#SHIB_SLUGIFY_USERNAME = True

SHIB_MAIL = ['mail', 'HTTP_MAIL', 'HTTP_SHIB_INETORGPERSON_MAIL']
SHIB_MAIL_DISPLAY_NAME = "MAIL"
SHIB_MAIL_DISPLAY_ADDINFO = "urn:mace:dir:attribute-def:mail or urn:oid:0.9.2342.19200300.100.1.3 or SHIB_INETORGPERSON_MAIL"

# both optional:
SHIB_FIRSTNAME = ['HTTP_SHIB_INETORGPERSON_GIVENNAME'] # value in settings.py.dist
#SHIB_FIRSTNAME = ['HTTP_GIVENNAME']
SHIB_FIRSTNAME_DISPLAY_NAME = "GIVENNAME"
SHIB_FIRSTNAME_DISPLAY_ADDINFO = "urn:mace:dir:attribute-def:givenName or urn:oid:2.5.4.42"

SHIB_LASTNAME = ['HTTP_SHIB_PERSON_SURNAME'] # value in settings.py.dist
#SHIB_LASTNAME = ['HTTP_SURNAME']
SHIB_LASTNAME_DISPLAY_NAME = "SURNAME"
SHIB_LASTNAME_DISPLAY_ADDINFO = "urn:mace:dir:attribute-def:sn or urn:oid:2.5.4.4"

##############################################################################
##############################################################################
# net data specific settings

# Define subnets that should not have any rules applied whatsoever
#PROTECTED_SUBNETS = ['10.10.0.0/16']
PROTECTED_SUBNETS = []

# Add two whois servers in order to be able to get all the subnets for an AS.
PRIMARY_WHOIS = 'whois.ripe.net'
ALTERNATE_WHOIS = 'whois.ripe.net'
# results in exceptions:
#ALTERNATE_WHOIS = 'whois.example.net'

PREFIX_LENGTH = 29

# Limit of ports in 'ports' / 'SrcPorts' / 'DstPorts' of a rule:
#PORTRANGE_LIMIT = 100
PORTRANGE_LIMIT = 65535

# Then actions in the ui (dropdown)
UI_USER_THEN_ACTIONS = ['discard', 'rate-limit']
UI_USER_PROTOCOLS = ['icmp', 'tcp', 'udp']

##############################################################################
##############################################################################
# netconf low-level


##############################################################################
##############################################################################
# Netconf Device credentials

# The following variables should contain the address of the device with
# flowspec, the username and password of the appliers account and the netconf
# port.
NETCONF_DEVICE = "172.16.113.10"
NETCONF_USER = "fod"
NETCONF_PASS = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
NETCONF_PORT = 22

##############################################################################
##############################################################################
# SNMP statistic fetching

# Statistics polled via SNMP:
# Default community string
SNMP_COMMUNITY = "abcd"

# list of IP addresses, each IP is a dict with "ip", "port" (optional, default
# is 161), "community" (optional, default is SNMP_COMMUNITY) keys
SNMP_IP = [
    {"ip": "192.168.0.1", "port": 1000},
    {"ip": "192.168.0.2", "port": 1001, "community": "abcdef"},
    {"ip": "192.168.0.3", "port": 1002},
    {"ip": "192.168.0.4", "port": 1002}
]

# or simpler way of IP list:
# SNMP_IP = ["10.0.0.1", "10.0.0.2"]

# OID of bytes counter (currently unused)
SNMP_CNTBYTES =     "1.3.6.1.4.1.2636.3.5.2.1.5"
# OID of packet counter
SNMP_CNTPACKETS =   "1.3.6.1.4.1.2636.3.5.2.1.4"

# get only statistics of specified tables
SNMP_RULESFILTER = ["__flowspec_default_inet__", "__flowspec_IAS_inet__"]
# load new data into cache if it is older that a specified number of seconds
SNMP_POLL_INTERVAL = 8 #seconds
# cache file for data
#SNMP_TEMP_FILE = "/tmp/snmp_temp_data"
SNMP_TEMP_FILE = "/srv/flowspy/snmp_temp_data"

SNMP_POLL_LOCK = "/var/run/fod/snmppoll.lock"

# Number of historical values to store for a route.
# Polling interval must be set for "snmp-stats-poll" celery task in CELERYBEAT_SCHEDULE.
# By default, it is 5 min interval, so SNMP_MAX_SAMPLECOUNT=12 means we have about
# one hour history.
#SNMP_MAX_SAMPLECOUNT = 2016
SNMP_MAX_SAMPLECOUNT = 12

# Age of inactive routes that can be already removed (in seconds)
#SNMP_REMOVE_RULES_AFTER = 604800
SNMP_REMOVE_RULES_AFTER = 3600

##############################################################################
##############################################################################
# statistics calc

STATISTICS_PER_RULE = True

STATISTICS_PER_MATCHACTION_ADD_FINAL_ZERO = False # not necessary if STATISTICS_PER_RULE==True

STATISTICS_PER_RULE__ADD_INITIAL_ZERO = True

##############################################################################
##############################################################################
# rule expiration

EXPIRATION_NOTIFY_DAYS = 4

# max number of days into the future that is allowed to pick in rule expiration datepicker
#MAX_RULE_EXPIRE_DAYS = 9999999
MAX_RULE_EXPIRE_DAYS = 30

##############################################################################
##############################################################################
# rule deletion (via rest)

ALLOW_ADMIN__FULL_RULEDEL = True
ALLOW_DELETE_FULL_FOR_NONADMIN = False

##############################################################################
##############################################################################
# REST API config 

# Perform checking for route duplicates (i.e., forbid creating multiple rules
# with the same addresses). By default it is enabled (True).
#DISABLE_RULE_OVERLAP_CHECK = False
ROUTES_DUPLICATES_CHECKING = True

##############################################################################
##############################################################################
# special test installation 

ENABLE_SETUP_VIEW = True

##############################################################################
##############################################################################

