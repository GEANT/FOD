#!/bin/bash

#if [ ! -f /.nemo_vsmd-desp0_setuped ]; then
#
#  set -e	
#
#  apt-get -yyy install xtables-addons-dkms xtables-addons-common exabgp linux-headers-amd64
#
#  export PERL_MM_USE_DEFAULT=1
#
#  perl -MCPAN -e 'install (Net::CIDR::Lite)'
#  perl -MCPAN -e 'install (Text::CSV_XS)'
#  mkdir -p /usr/share/xt_geoip
#
#  (
#    cd /usr/share/xt_geoip
#    /usr/libexec/xtables-addons/xt_geoip_dl
#    /usr/libexec/xtables-addons/xt_geoip_build -D /usr/share/xt_geoip
#  )
#
#  apt-get -yyy install virtualenv
#  touch /.nemo_vsmd-deps0_setuped
#fi

/nemo-all/install_vsmd_deps0

if [ "$1" = "--stage1" ]; then
  exit
fi

#

apt-get -yyy install python3
if python3 --version | grep -q 3.9; then
  apt-get -yyy install python3-daemon
fi

#

if [ ! -f /nemo-all/secrets/vmsd1.site.crt.pem ]; then
  /nemo-all/install_vsmd_certs
fi

#

apt-get -yyy install openssh-server
systemctl enable ssh
systemctl start ssh

useradd -m freerouter

if [ ! -f /home/freerouter/test1 ]; then
  cat > /home/freerouter/test1 <<EOF
#!/bin/sh
echo "Hello" 
EOF
  chmod +x /home/freerouter/test1
fi

if [ ! -f /home/freerouter/rare ]; then
  cat > /home/freerouter/rare <<EOF
#!/bin/sh
echo "Hello" # TODO: use freertr stats script instead
EOF
  chmod +x /home/freerouter/rare
fi

if [ ! -f /root/.ssh/id_rsa ]; then
  ssh-keygen -t rsa -b 2048
  mkdir -p /home/freerouter/.ssh/
  chown freerouter: /home/freerouter/.ssh/
  chmod og-rx /home/freerouter/.ssh/
  cat /root/.ssh/id_rsa.pub >>/home/freerouter/.ssh/authorized_keys
fi

ssh freerouter@172.18.0.1 ./test1

#

cd nemo-vsmd/

if [ ! -d venv ]; then
   virtualenv venv
fi

. venv/bin/activate

if python3 --version | grep -q 3.9 && ! pip --version; then # is venv pip broken?
  rm -f venv/bin/pip 
  hash -r
  type -p pip
fi
type -p pip

pip install -r requirements.txt 

export PYTHONPATH="$PYTHONPATH:$PWD/lib/python3/"

mkdir -p /services/etc/nemo/

if [ ! -f /services/etc/nemo/nemo.conf -o ../nemo.conf.vsmd -nt /services/etc/nemo/nemo.conf ]; then
  #touch /services/etc/nemo/nemo.conf
  #echo "[vsmd]" >> /services/etc/nemo/nemo.conf
  #
  #cp -vf ./doc/nemo.conf.example /services/etc/nemo/nemo.conf
  #
  # ./nemo.conf.vsmd
  cp -vf ../nemo.conf.vsmd /services/etc/nemo/nemo.conf
fi

if [ ! -f /services/data/vsmd/vsmd.sqlite ]; then
  mkdir -p /services/data/vsmd/
  touch /services/data/vsmd/vsmd.sqlite
fi

#if [ ! -f /nemo-all/secrets/vmsd1.site.crt.pem ]; then
#	/nemo-all/install_vsmd_certs
#fi

echo "vsmd params to configure (in https://localhost:8000/admin/mitigate/vsmd/):"
echo "name:     vsmd1"
echo "url:      https://vmsd1:3236/RPC2"
echo "cafile:   /services/etc/nemo/vmsd1.ca.crt.pem"
echo "keyfile:  /services/etc/nemo/vmsd1.site.key.pem"
echo "certfile: /services/etc/nemo/vmsd1.site.crt.pem"

echo TODO: configure /services/etc/nemo/nemo.conf
echo use ./bin/adm.py OR ./bin/nemo-vsmd

if [ "$1" = "--install_only" ]; then
  echo "use ./bin/nemo-vsmd to run inside outer container"
else	
  exec ./bin/nemo-vsmd --debug "$@"
fi



