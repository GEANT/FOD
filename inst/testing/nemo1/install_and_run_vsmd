#!/bin/bash

if [ ! -f /.nemo_vsmd_setuped ]; then

  set -e	

  apt-get -yyy install xtables-addons-dkms xtables-addons-common exabgp linux-headers-amd64

  export PERL_MM_USE_DEFAULT=1

  perl -MCPAN -e 'install (Net::CIDR::Lite)'
  perl -MCPAN -e 'install (Text::CSV_XS)'
  mkdir -p /usr/share/xt_geoip

  (
    cd /usr/share/xt_geoip
    /usr/libexec/xtables-addons/xt_geoip_dl
    /usr/libexec/xtables-addons/xt_geoip_build -D /usr/share/xt_geoip
  )

  apt-get -yyy install virtualenv

  touch /.nemo_vsmd_setuped

fi

#

(
cd /nemo-all/nemo-offramctl/

if [ ! -d venv ]; then
   virtualenv venv
fi

. venv/bin/activate

pip install -r requirements.txt 
export PYTHONPATH="$PYTHONPATH:$PWD/lib/python3/"
)

####

# install stuff for offramp host (= localhost)

apt-get install openssh-server
systemctl enable ssh
systemctl start ssh

#

adduser -m freertr

#

cat > /home/freertr/test1 <<EOF
#!/bin/bash
echo "Hello World" 
EOF
chmod +x /home/freertr/test1

cat > /home/freertr/rare <<EOF
#!/bin/bash
echo "Hello World" # TODO # use freertr mitigation stats script here instead
EOF
chmod +x /home/freertr/rare

#

ssh-keygen -b 2048 -t rsa

cp -fv /root/.ssh/id_rsa /services/etc/nemo/id_rsa 1>&2

mkdir -p /home/freertr/.ssh/
chown freerouter /home/freertr/.ssh/
chmod u+rwx,go-rw /home/freertr/.ssh/
cat /root/.ssh/id_rsa.pub >> /home/freertr/.ssh/authorized_keys

# consist ssh connection to offramp host: consistent with ./nemo.conf.vsmd
ssh -i /root/.ssh/id_rsa freerouter@172.18.0.1 ./test1

###
# install vsmd pre-requisites

cd /nemo-all/nemo-vsmd/

if [ ! -d venv ]; then
   virtualenv venv
fi

. venv/bin/activate

pip install -r requirements.txt 
export PYTHONPATH="$PYTHONPATH:$PWD/lib/python3/"

# conf vsmd

mkdir -p /services/etc/nemo/

if [ ! -f /services/etc/nemo/nemo.conf -o ../nemo.conf.vsmd -nt /services/etc/nemo/nemo.conf ]; then
  #touch /services/etc/nemo/nemo.conf
  #echo "[vsmd]" >> /services/etc/nemo/nemo.conf
  #
  #cp -vf ./doc/nemo.conf.example /services/etc/nemo/nemo.conf
  # ./nemo.conf.vsmd
  cp -vf ../nemo.conf.vsmd /services/etc/nemo/nemo.conf
fi

if [ ! -f /services/data/vsmd/vsmd.sqlite ]; then
  mkdir -p /services/data/vsmd/
  touch /services/data/vsmd/vsmd.sqlite
fi

if [ ! -f /nemo-all/secrets/vmsd1.site.crt.pem ]; then
  /nemo-all/install_vsmd_certs
fi

echo "vsmd params to configure (in https://localhost:8000/admin/mitigate/vsmd/):"
echo "name:     vsmd1"
echo "url:      https://vmsd1:3236/RPC2"
echo "cafile:   /services/etc/nemo/vmsd1.ca.crt.pem"
echo "keyfile:  /services/etc/nemo/vmsd1.site.key.pem"
echo "certfile: /services/etc/nemo/vmsd1.site.crt.pem"

echo TODO: configure /services/etc/nemo/nemo.conf
echo use ./bin/adm.py OR ./bin/nemo-vsmd

if [ "$1" = "--install_only" ]; then
  echo "use ./bin/nemo-vsmd to run inside outer container"
else	
  exec ./bin/nemo-vsmd "$@"
fi



