#!/bin/bash

NETCONF_DEVICE="$1" 
shift 1
NETCONF_PORT="$1"
shift 1
NETCONF_USER="$1" 
shift 1
NETCONF_PASS="$1"
shift 1

##

[ -n "$NETCONF_DEVICE" ] || NETCONF_DEVICE="127.0.0.1"
[ -n "$NETCONF_PORT" ] || NETCONF_PORT="830"
[ -n "$NETCONF_USER" ] || NETCONF_USER="netconf"
[ -n "$NETCONF_PASS" ] || NETCONF_PASS="netconf"

echo "$0: using NETCONF_DEVICE='$NETCONF_DEVICE' NETCONF_PORT='$NETCONF_PORT' NETCONF_USER='$NETCONF_USER' NETCONF_PASS='$NETCONF_PASS'" 1>&2

##

unset SSH_AUTH_SOCK

##

. ./venv/bin/activate

##

#exec env DJANGO_SETTINGS_MODULE="flowspy.settings" python -c $'\nfrom utils.proxy import *; \nproxy = Applier(); import logging; logger = logging.getLogger("ncclient.transport.ssh").setLevel(logging.DEBUG); logger = logging.getLogger("ncclient.operations.rpc").setLevel(logging.DEBUG); \nxml = proxy.get_existing_config_xml();\nprint(xml);\n'

##

export DJANGO_SETTINGS_MODULE="flowspy.settings" 

exec python <<EOF

# enable debugging in ncclient library
import logging; 
logger = logging.getLogger("ncclient.transport.ssh").setLevel(logging.DEBUG); 
logger = logging.getLogger("ncclient.operations.rpc").setLevel(logging.DEBUG); 

###

from django.conf import settings; 

# override flowspy settings to enable debugging 
settings.LEVEL = logging.DEBUG; # override flowspy/settings.py
settings.LOG_FILE_LOCATION = "." #

# override flowspy NETCONF parameters with local values
# check further NETCONF_* variables in flowspec/settings.py, if needed

settings.NETCONF_DEVICE = '$NETCONF_DEVICE'; # override flowspy/settings.py
settings.NETCONF_PORT = '$NETCONF_PORT';     # override flowspy/settings.py
settings.NETCONF_USER = '$NETCONF_USER';     # override flowspy/settings.py
settings.NETCONF_PASS = '$NETCONF_PASS';     # override flowspy/settings.py

# for testing with freertr for now
settings.NETCONF__TESTWISE_TRY_TO_FETCH_WITHOUT_FILTER = 1; # override flowspy/settings.py

###

# actually perform NETCONF get-config query and print result
from utils.proxy import *;
proxy = Applier(); 
xml = proxy.get_existing_config_xml();
print(xml);

EOF

